
version: '2.3'
services:
  db:
    image: mariadb:10.7
    container_name: etherealengine_db
    environment:
      MYSQL_ROOT_PASSWORD: etherealengine-root
      MYSQL_DATABASE: etherealengine
      MYSQL_USER: server
      MYSQL_PASSWORD: password
    ports:
      - '3306:3306'
  testdb:
    image: mariadb:10.7
    container_name: etherealengine_test_db
    environment:
      MYSQL_ROOT_PASSWORD: etherealengine-root
      MYSQL_DATABASE: etherealengine
      MYSQL_USER: server
      MYSQL_PASSWORD: password
    ports:
      - '3305:3306'
  minikubedb:
    image: mariadb:10.7
    container_name: etherealengine_minikube_db
    environment:
      MYSQL_ROOT_PASSWORD: etherealengine-root
      MYSQL_DATABASE: etherealengine
      MYSQL_USER: server
      MYSQL_PASSWORD: password
    ports:
      - '3304:3306'
  redis:
    image: redis
    container_name: etherealengine_redis
    command: redis-server
    ports:
      - '6379:6379'
  # minio:
  #   image: quay.io/minio/minio
  #   container_name: etherealengine_minio_s3
  #   ports:
  #     - "9000:9000"
  #     - "9090:9090"
  #   volumes:
  #     - minio_storage:/data
  #   environment:
  #     MINIO_ROOT_USER: server
  #     MINIO_ROOT_PASSWORD: password
  #   command: server /data --console-address ":9090"
  # miniobuckets:
  #   image: minio/mc
  #   container_name: etherealengine_minio_init
  #   depends_on:
  #     - minio
  #   entrypoint: >
  #     /bin/sh -c "
  #     /usr/bin/mc alias set myminio http://minio:9000 server password;
  #     /usr/bin/mc mb myminio/etherealengine-static-resources;
  #     /usr/bin/mc anonymous set public myminio/etherealengine-static-resources;
  #     /usr/bin/mc mb myminio/etherealengine-microk8s-static-resources;
  #     /usr/bin/mc anonymous set public myminio/etherealengine-microk8s-static-resources;
  #     /usr/bin/mc mb myminio/etherealengine-minikube-static-resources;
  #     /usr/bin/mc anonymous set public myminio/etherealengine-minikube-static-resources;
  #     exit 0;
  #     "
#   elasticsearch:
#     image: docker.elastic.co/elasticsearch/elasticsearch:7.4.0
#     container_name: elasticsearch
#     environment:
#       - xpack.security.enabled=false
#       - discovery.type=single-node
#     ulimits:
#       memlock:
#         soft: -1
#         hard: -1
#       nofile:
#         soft: 65536
#         hard: 65536
#     cap_add:
#       - IPC_LOCK
#     volumes:
#       - elasticsearch-data:/usr/share/elasticsearch/data
#     ports:
#       - 9200:9200
#       - 9300:9300
#   kibana:
#     container_name: kibana
#     image: docker.elastic.co/kibana/kibana:7.4.0
#     environment:
#       - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
#       - telemetry.enabled=false
#     ports:
#       - 5601:5601
#     depends_on:
#       - elasticsearch
# volumes:
#   minio_storage: {}
#   elasticsearch-data:
#     driver: local
